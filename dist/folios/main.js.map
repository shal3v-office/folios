{"version":3,"sources":["./src/app/projects-list/projects-list.component.ts","./src/app/projects-list/projects-list.component.html","./src/app/project/project.component.ts","./src/app/project/project.component.html","./src/app/services/users.service.ts","./src/environments/environment.ts","./src/app/services/projects.service.ts","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/user-list/user-list.component.ts","./src/app/user-list/user-list.component.html","./src/app/classes/user.ts","./src/app/server-error-page/server-error-page.component.ts","./src/app/server-error-page/server-error-page.component.html","./src/app/app.module.ts","./src/app/classes/project.ts","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/application/application.component.ts","./src/app/application/application.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/add-project/add-project.component.ts","./src/app/add-project/add-project.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {Project} from '../classes/project'\nimport { ProjectsService } from '../services/projects.service';\nimport { UsersService } from '../services/users.service';\n\n@Component({\n  selector: 'app-projects-list',\n  templateUrl: './projects-list.component.html',\n  styleUrls: ['./projects-list.component.css']\n})\nexport class ProjectsListComponent implements OnInit {\n\n  projectsList:Project[]\n  constructor(private usersService: UsersService,private router: Router,private projectsService: ProjectsService) {\n\n  }\n\n  ngOnInit(): void {\n    this.projectsService.loadAll().then(()=>{\n      this.projectsList=this.projectsService.projectsList\n    });\n  }\n  addProject(){\n    if(this.usersService.hasLoginUser){\n      this.router.navigate(['/add-project']);\n    }\n    else{\n      alert(\"only logined user can add project, please login and continue\");\n    }\n    \n  }\n\n}\n","<div class=\"container projectslist\">\n    <button class=\"btn btn-primary\" (click)=\"addProject()\">Add Project</button>\n    <div class=\"card-columns\"> \n        <div *ngFor=\"let project of projectsList;\" class=\"card\" style=\"width: 18rem;\">\n            <img class=\"card-img-top\" src=\"project.file_url\" alt=\"Card image cap\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{{project.title}}</h5>\n                <p class=\"card-text\">{{project.desc}}</p>\n            </div>\n            <div class=\"card-body\">\n                <a href=\"#\" class=\"card-link\">follows</a>\n                <a href=\"#\" class=\"card-link\">likes</a>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>project works!</p>\n","import { Injectable } from '@angular/core';\nimport {User} from '../classes/user';\nimport { Router } from '@angular/router';\nconst UsersStore = Backendless.Data.of('Users');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private router: Router) { \n  }\n\n  public users: User[] = [];\n  public currentUser:User=null;\n  public hasLoginUser:boolean=false;\n\n  loadAll() {\n    return UsersStore.find().then((users: User[]) => {\n      UsersService.prototype.users = users;\n    });\n   \n  }\n  add(newUser: User) {\n    return Backendless.UserService.register<User>(newUser)\n    .then((result: User) =>{\n      alert('Registered User: '+ result.username);\n      this.login(newUser);\n    })\n    .catch(error => alert('Can not Register User: '+ error.message));\n  }\n\n  login(loginUser: User) {\n    var thisEl=this;\n    return Backendless.UserService.login<User>(loginUser.email,loginUser.password)\n    .then((result: User) =>{\n      alert('Logined User: '+ result.username);\n      thisEl.hasLoginUser=true;\n      thisEl.getCurrentUser().then(function(){\n        thisEl.router.navigate(['/home']);\n      });\n    })\n    .catch(error => alert('Can not Login User: '+ error.message));\n  }\n\n  getCurrentUser(){\n    var thisEl=this;\n    if(this.currentUser==null){\n      var userService=this;\n      return Backendless.UserService.getCurrentUser()\n      .then( function( currentUser ) {\n          if(currentUser!=null){\n            thisEl.currentUser=new User();\n            thisEl.currentUser=currentUser;\n            thisEl.hasLoginUser=true; \n          }\n          else{\n            thisEl.hasLoginUser=false;\n          }\n      })\n      .catch( function ( error ) {\n        console.log('Can not Get Current User: '+ error.message);\n      });\n    }\n  }\n  logout(){\n    debugger;\n    var thisEl=this;\n    return Backendless.UserService.logout()\n    .then( function() {\n      thisEl.currentUser=null;\n      thisEl.hasLoginUser=false;\n    })\n    .catch( function( error ) {\n      alert('Can not Logout User: '+ error.message)\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  backendless: {\n    APP_ID: '071292C7-7A96-4E5E-FF7D-DF65E64AD300',\n    API_KEY: '022338FB-91DB-4BFE-ACEE-895226FE9D69'\n  }\n}\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Project } from '../classes/project';\n\nconst ProjectsStore = Backendless.Data.of('Projects');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n  public projectsList: Project[] = [];\n  constructor() { }\n  loadAll() {\n    return ProjectsStore.find().then((projects: Project[]) => {\n      this.projectsList = projects;\n    });\n   \n  }\n  add(newProject: Project) {\n    return ProjectsStore.save<Project>(newProject).then((savedProject: Project) => {\n      this.projectsList.push(savedProject);\n    })\n    .catch(error => alert('Can not add project: '+ error.message));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <p>Welcome Home Page</p>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'folios';\n}\n","\n  <app-header></app-header>\n  <router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport {UsersService} from '../services/users.service';\nimport {User} from '../classes/user';\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  public users:User [];\n  constructor(private usersService:UsersService) { }\n  ngOnInit(): void {\n    this.usersService.loadAll().then(() => {\n      this.users = this.getUsers();\n    });\n  }\n  public getUsers() {\n    return this.usersService.users;\n  }\n\n}\n","<ul class=\"list-group\">\n    <ul class=\"list-group\">\n      <li *ngFor=\"let user of users\" class=\"list-group-item\">\n        <div>{{user.name}}</div>\n        <div class=\"text-muted small\">{{user.email}}</div>\n        <div class=\"text-muted small\">{{user.password}}</div>\n      </li>\n    </ul>\n</ul>\n","export class User extends Backendless.User{\r\n    public email?: string;\r\n    public password?:string;\r\n    public username?: string;\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-server-error-page',\n  templateUrl: './server-error-page.component.html',\n  styleUrls: ['./server-error-page.component.css']\n})\nexport class ServerErrorPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"page-wrap d-flex flex-row align-items-center\">\n    <div class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-12 text-center\">\n                <span class=\"display-1 d-block\">500</span>\n                <div class=\"mb-4 lead\">Opps! Internal Server Error!</div>\n                <div class=\"mb-4\">Unfortunately we're having trouble loading the page you are looking for. Please come back in a while.</div>\n                <a routerLink=\"/home\" class=\"btn btn-link\">Back to Home</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport Backendless from 'backendless';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { FormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { HeaderComponent } from './header/header.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { ServerErrorPageComponent } from './server-error-page/server-error-page.component';\nimport { ApplicationComponent } from './application/application.component';\nimport { ProjectsListComponent } from './projects-list/projects-list.component';\nimport { ProjectComponent } from './project/project.component';\nimport { AddProjectComponent } from './add-project/add-project.component';\n\nBackendless.initApp(environment.backendless.APP_ID, environment.backendless.API_KEY);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserListComponent,\n    SignUpComponent,\n    LoginComponent,\n    HeaderComponent,\n    NotFoundComponent,\n    HomePageComponent,\n    ServerErrorPageComponent,\n    ApplicationComponent,\n    ProjectsListComponent,\n    ProjectComponent,\n    AddProjectComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { User } from './user';\r\nimport {CoverImg} from './CoverImg'\r\nexport class Project{\r\n    public title?: string;\r\n    public type?: string;\r\n    public created?:Date;\r\n    public updated?:Date;\r\n    public description?: string;\r\n    public owner?: User[];\r\n    public status?: string;\r\n    public file_url?: string;\r\n    public file_format?: string;\r\n    public file_size?: number;\r\n    public cover_img?:CoverImg;\r\n    //public team:Team;\r\n    // tags:Tag[];\r\n}","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport {UsersService} from '../services/users.service';\nimport {User} from '../classes/user';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  public newUser: User;\n  constructor(private usersService: UsersService) { }\n\n  ngOnInit(): void {\n    this.newUser= new User();\n  }\n  onSubmit() {\n    if (this.newUser.username && this.newUser.email && this.newUser.password) {\n      this.usersService.add(this.newUser)\n        .then(() => {\n          this.newUser = new User();\n        });\n    } else {\n      alert('need to fill all the fields');\n    }\n  }\n\n}\n","<div class=\"container centered\">\n  <form name=\"signUpForm\" class=\"border border-light p-1 w-50\">\n    <p class=\"h4 mb-4 text-center \">Sign Up</p>\n    <div class=\"form-group\">\n      <label for=\"exampleInputName1\">Name</label>\n      <input type=\"text\" required name=\"name\" [(ngModel)]=\"newUser.username\" class=\"form-control\" id=\"exampleInputName1\" placeholder=\"Enter name\" >\n    </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Email address</label>\n    <input type=\"email\" required name=\"email\" [(ngModel)]=\"newUser.email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n    <small id=\"emailHelp\" class=\"form-text text-muted \">We'll never share your email with anyone else.</small>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">Password</label>\n    <input type=\"password\" required name=\"password\"  maxlength=\"6\" minlength=\"6\" [(ngModel)]=\"newUser.password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Enter Password\">\n  </div>\n  <button type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\">Submit</button>\n  </form>\n</div>\n \n\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../services/users.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  hasLoginUser:boolean;\n  constructor(public usersService: UsersService) { }\n\n  ngOnInit(): void {\n    this.hasLoginUser=this.usersService.hasLoginUser;\n  }\n  onSignOut(){\n    var thisEl=this;\n    this.usersService.logout()\n    .then( function() {\n      thisEl.hasLoginUser=thisEl.usersService.hasLoginUser;\n    })\n  }\n\n}\n","<div role=\"banner\" class=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n    <h5 class=\"my-0 mr-md-auto font-weight-normal\">Folios</h5>\n    <nav class=\"my-2 my-md-0 mr-md-3\">\n      <a class=\"p-2 text-dark\" routerLink=\"\">Features</a>\n      <a class=\"p-2 text-dark\" routerLink=\"/project-list\">Projects</a>\n      <a class=\"p-2 text-dark\" routerLink=\"\">Pricing</a>\n      <a class=\"p-2 text-dark cursor-pointer\" *ngIf=\"!usersService.hasLoginUser\" routerLink=\"/login\">Login</a>\n      <a class=\"p-2 text-dark cursor-pointer\" *ngIf=\"usersService.hasLoginUser\" (click)=\"onSignOut()\">Sign out</a>\n    </nav>\n    <a class=\"btn btn-outline-primary\" routerLink=\"/sign-up\">Sign up</a>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-application',\n  templateUrl: './application.component.html',\n  styleUrls: ['./application.component.css']\n})\nexport class ApplicationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>application works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"page-wrap d-flex flex-row align-items-center\">\n    <div class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-12 text-center\">\n                <span class=\"display-1 d-block\">404</span>\n                <div class=\"mb-4 lead\">The page you are looking for was not found.</div>\n                <a routerLink=\"/home\" class=\"btn btn-link\">Back to Home</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { Component, NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { LoginComponent } from './login/login.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { ServerErrorPageComponent } from './server-error-page/server-error-page.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport {ProjectsListComponent} from './projects-list/projects-list.component'\nimport {AddProjectComponent} from './add-project/add-project.component'\n\nconst routes: Routes = [\n  { path: 'sign-up', component: SignUpComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'home', component: HomePageComponent },\n  { path: 'server-error-page', component: ServerErrorPageComponent },\n  { path: 'project-list', component: ProjectsListComponent},\n  { path: 'add-project', component: AddProjectComponent},\n  { path: '', component: HomePageComponent },\n  { path: 'not-found', component: NotFoundComponent },\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport {UsersService} from '../services/users.service';\nimport {User} from '../classes/user';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public loginUser: User;\n  constructor(private usersService: UsersService) { }\n\n  ngOnInit(): void {\n    this.loginUser= new User();\n  }\n  onSubmit() {\n    if (this.loginUser.email && this.loginUser.password) {\n      this.usersService.login(this.loginUser)\n        .then(() => {\n          this.loginUser = new User();\n        });\n    } else {\n      alert('need to fill all the fields');\n    }\n  }\n\n}\n","<div class=\"container centered\">\n  <form class=\"border border-light p-5 w-50\">\n    <p class=\"h4 mb-4 text-center \">Login</p>\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Email address</label>\n    <input type=\"email\" name=\"email\" [(ngModel)]=\"loginUser.email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">Password</label>\n    <input type=\"password\" name=\"password\" [(ngModel)]=\"loginUser.password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\n  </div>\n  <button type=\"submit\" (click)=\"onSubmit()\" class=\"btn btn-primary\">Submit</button>\n  </form>\n</div>\n   \n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Project } from '../classes/project';\nimport { ProjectsService } from '../services/projects.service';\nimport { UsersService } from '../services/users.service';\n\n\n@Component({\n  selector: 'app-add-project',\n  templateUrl: './add-project.component.html',\n  styleUrls: ['./add-project.component.css']\n})\nexport class AddProjectComponent implements OnInit {\n  newProject:Project;\n  constructor(private projectsService: ProjectsService,public usersService: UsersService,private router: Router) {\n    this.newProject=new Project();\n  }\n\n  ngOnInit(): void {\n    if(!this.usersService.hasLoginUser){\n      this.router.navigate(['/sign-up']);\n    }\n  }\n  addProject(){\n    this.projectsService.add(this.newProject).then(()=>{\n      this.newProject=new Project();\n    })\n  }\n\n}\n","<div class=\"container centered\">\n    <form name=\"signUpForm\" class=\"border border-light p-1 w-50\">\n      <p class=\"h4 mb-4 text-center \">Add Project</p>\n      <div class=\"form-group\">\n        <label for=\"Title\">Title</label>\n        <input type=\"text\" required name=\"title\" [(ngModel)]=\"newProject.title\" class=\"form-control\" id=\"Title\" placeholder=\"Enter title\" >\n      </div>\n    <div class=\"form-group\">\n      <label for=\"Description\">Description</label>\n      <input type=\"email\" required name=\"description\" [(ngModel)]=\"newProject.description\" class=\"form-control\" id=\"Description\" placeholder=\"Enter description\">\n    </div>\n    <div class=\"form-group\">\n        <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile01\"\n        aria-describedby=\"inputGroupFileAddon01\">\n        <label for=\"inputGroupFile01\">Choose file</label>\n    </div>\n    <button type=\"submit\" (click)=\"addProject()\" class=\"btn btn-primary\">Submit</button>\n    </form>\n  </div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}